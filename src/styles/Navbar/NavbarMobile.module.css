/* --- Hamburger Menu Variables & Styles --- */
/* (使用之前定義的變數) */
:root {
  --mobile-bar-width: 22px;
  --mobile-bar-height: 2px;
  --mobile-hamburger-gap: 5px;
  --mobile-foreground: rgba(78, 117, 85, 0.7);
  --mobile-animation-timing: 200ms ease-in-out;
  --mobile-hamburger-height: calc(var(--mobile-bar-height) * 3 + var(--mobile-hamburger-gap) * 2);
}

.hamburgerMenu {
  display: flex;
  flex-direction: column;
  gap: var(--mobile-hamburger-gap);
  width: max-content;
  padding: 10px;
  cursor: pointer;
  background: none;
  border: none;
  z-index: 12; /* 高於選單列表 */
  position: relative;
}

.hamburgerBar {
  display: block;
  width: var(--mobile-bar-width);
  height: var(--mobile-bar-height);
  background-color: var(--mobile-foreground);
  border-radius: 9px;
  transform-origin: center center;
  transition: transform var(--mobile-animation-timing), opacity var(--mobile-animation-timing);
}

/* Hamburger animation to 'X' when isOpen class is added */
.hamburgerMenu.isOpen .hamburgerBar:nth-child(1) {
  transform: translateY(calc(var(--mobile-bar-height) + var(--mobile-hamburger-gap))) rotate(45deg);
}

.hamburgerMenu.isOpen .hamburgerBar:nth-child(2) {
  opacity: 0;
}

.hamburgerMenu.isOpen .hamburgerBar:nth-child(3) {
  transform: translateY(calc(-1 * (var(--mobile-bar-height) + var(--mobile-hamburger-gap)))) rotate(-45deg);
}


/* --- Mobile Navigation List --- */
.navListMobile {
  position: absolute;
  top: calc(100% - 1px); /* 緊貼 Header 底部 */
  left: 0;
  width: 100%;
  background-color: #ffffff;
  box-shadow: 0px 5px 10px rgba(0, 0, 0, 0.1);
  z-index: 101;
  list-style: none;
  margin: 0;
  padding: 10px 0;
  border-top: 1px solid #eee;
  max-height: calc(100vh - 80px); /* 限制最大高度 */
  overflow-y: auto;

  /* Visibility & Animation using isOpen class */
  opacity: 0;
  visibility: hidden;
  transform: translateY(-10px);
  transition: opacity 0.3s ease, visibility 0.3s ease, transform 0.3s ease;
}

.navListMobile.isOpen {
  opacity: 1;
  visibility: visible;
  transform: translateY(0);
}


/* Mobile list item */
.navItemMobile {
  border-bottom: 1px solid #f0f0f0;
}
.navItemMobile:last-child {
  border-bottom: none;
}

/* Mobile navigation link (for items WITHOUT dropdown) */
/* Also used as base style for the dropdown trigger button */
.navLinkMobile {
  display: flex; /* Use flex to align text and potential icons/arrows */
  align-items: center;
  width: 100%; /* Make it full width */
  padding: 14px 25px;
  text-align: left; /* 改回靠左對齊比較常見 */
  color: rgba(78, 117, 85, 0.9);
  font-size: 16px;
  font-family: "Noto Serif TC";
  text-decoration: none;
  background: none; /* Ensure button variant has no background */
  border: none; /* Ensure button variant has no border */
  cursor: pointer;
  transition: background-color 0.2s ease, color 0.2s ease;
}

/* Style for the button used as parent item/dropdown trigger */
.navLinkMobile.hasDropdown {
  justify-content: space-between; /* Push text and arrow apart */
}

.navLinkMobile:hover {
  background-color: rgba(241, 246, 233, 0.5);
  color: rgba(4, 87, 19, 1);
}

/* Mobile Active Link Style */
.activeLink {
  background-color: rgba(241, 246, 233, 0.9);
  color: rgba(4, 87, 19, 1);
  font-weight: bold;
}

/* Text span inside the NavLink/Button
.linkText {
  (No specific styles needed unless for spacing)
} */

/* Dropdown toggle button (inside the parent item button/link) */
.dropdownToggle {
  background: none;
  border: none;
  padding: 5px; /* Minimal padding, click area is handled by parent */
  margin-left: 10px; /* Space from text */
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: inherit;
  pointer-events: none; /* Make the button itself not steal clicks from parent if needed, though onClick on button is used */
}

.arrow {
  display: inline-block;
  font-size: 0.5em; /* Adjust arrow size */
  color: rgba(78, 117, 85, 0.7); /* Arrow color */
  transition: transform 0.2s ease-in-out;
}

/* Rotate arrow when parent trigger has isOpen class */
.navLinkMobile.hasDropdown.isOpen .arrow {
  transform: rotate(90deg);
}


/* --- Mobile Dropdown List --- */
.dropdownListMobile {
  list-style: none;
  margin: 0;
  padding: 0;
  background-color: rgba(241, 246, 233, 0.3);
  overflow: hidden; /* Crucial for max-height animation */
  max-height: 0; /* Collapsed by default */
  transition: max-height 0.3s ease-in-out;
}

/* Expand dropdown when isOpen class is added */
.dropdownListMobile.isOpen {
  max-height: 30em; /* Adjust needed height (use em or large px) */
}

/* Mobile dropdown item
.dropdownItemMobile {
(Optional: border-top: 1px dashed #ddd;)
} */

/* Mobile dropdown link */
.dropdownLinkMobile {
  display: block;
  padding: 12px 25px 12px 40px; /* Indent dropdown links */
  text-align: left; /* 通常下拉項目靠左對齊 */
  color: rgba(88, 127, 95, 0.9);
  font-size: 15px;
  font-weight: 400; /* Explicitly set */
  font-family: "Noto Serif TC"; /* Explicitly set */
  text-decoration: none;
  transition: background-color 0.2s ease, color 0.2s ease;
}

.dropdownLinkMobile:hover {
  background-color: rgba(230, 240, 220, 0.9);
  color: rgba(4, 87, 19, 1);
}

/* Active style for mobile dropdown links */
.dropdownLinkMobile.activeLink {
  font-weight: bold; /* Keep bold */
  color: rgba(4, 87, 19, 1); /* Keep color */
  /* background-color: transparent; */ /* Optional: remove background */
}